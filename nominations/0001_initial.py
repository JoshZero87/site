# -*- coding: utf-8 -*-
# Generated by Django 1.10.7 on 2017-06-07 00:26
from __future__ import unicode_literals

from django.db import migrations, models
import django.db.models.deletion
import localflavor.us.models
import phonenumber_field.modelfields
import json


def populate_questions(apps, schema_editor):
    Question = apps.get_model('nominations', 'Question')
    NominationQuestion = apps.get_model('nominations', 'NominationQuestion')

    with open('nominations/questions.json') as f:
        questions = json.load(f)
        questions_to_create = []
        for q in questions:
            questions_to_create.append(Question(**{'text': q['text'], 'include_multi_choice': q.get('include_multi_choice', True)}))
    Question.objects.bulk_create(questions_to_create)

    with open('nominations/nomination_questions.json') as f:
        nom_questions = json.load(f)
        nom_questions_to_create = []
        for n in nom_questions:
            nom_questions_to_create.append(NominationQuestion(**{'text': n}))
    NominationQuestion.objects.bulk_create(nom_questions_to_create)


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('local_groups', '0049_auto_20170606_2331'),
    ]

    operations = [
        migrations.CreateModel(
            name='Application',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_dt', models.DateTimeField(auto_now_add=True)),
                ('rep_email', models.EmailField(max_length=254, null=True, verbose_name='Contact Email')),
                ('rep_first_name', models.CharField(max_length=35, null=True, verbose_name='First Name')),
                ('rep_last_name', models.CharField(max_length=35, null=True, verbose_name='Last Name')),
                ('rep_phone', phonenumber_field.modelfields.PhoneNumberField(blank=True, max_length=128, null=True, verbose_name='Phone Number')),
                ('candidate_first_name', models.CharField(max_length=255, null=True, verbose_name='Candidate First Name')),
                ('candidate_last_name', models.CharField(max_length=255, null=True, verbose_name='Candidate Last Name')),
                ('candidate_office', models.CharField(max_length=255, null=True, verbose_name='Candidate Office')),
                ('candidate_district', models.CharField(max_length=255, null=True, verbose_name='Candidate District')),
                ('candidate_state', localflavor.us.models.USStateField(max_length=2, null=True)),
                ('status', models.CharField(choices=[('incomplete', 'Incomplete'), ('submitted', 'Submitted'), ('approved', 'Approved'), ('removed', 'Denied')], default='incomplete', max_length=16)),
                ('group', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='local_groups.Group', to_field='group_id')),
            ],
        ),
        migrations.CreateModel(
            name='Nomination',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('group_nomination_process', models.TextField(max_length=500, null=True, verbose_name='Group Nomination Process')),
            ],
        ),
        migrations.CreateModel(
            name='NominationQuestion',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='NominationResponse',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('response', models.TextField()),
                ('nomination', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='nominations.Nomination')),
                ('question', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='nominations.NominationQuestion')),
            ],
        ),
        migrations.CreateModel(
            name='Question',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.TextField(verbose_name='Question Text')),
                ('include_multi_choice', models.BooleanField(default=True, verbose_name='Include Multiple Choice Selection')),
            ],
        ),
        migrations.CreateModel(
            name='Questionnaire',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('candidate_first_name', models.CharField(max_length=255, null=True, verbose_name='Candidate First Name')),
                ('candidate_last_name', models.CharField(max_length=255, null=True, verbose_name='Candidate Last Name')),
                ('candidate_email', models.EmailField(max_length=255, null=True, verbose_name='Candidate Email')),
                ('candidate_phone', phonenumber_field.modelfields.PhoneNumberField(blank=True, max_length=128, null=True, verbose_name='Candidate Phone Number')),
                ('candidate_office', models.CharField(max_length=255, null=True, verbose_name='Candidate Office')),
                ('candidate_district', models.CharField(max_length=255, null=True, verbose_name='Candidate District')),
                ('candidate_state', localflavor.us.models.USStateField(max_length=2, null=True)),
                ('candidate_website_url', models.URLField(blank=True, max_length=255, null=True, verbose_name='Candidate Website URL')),
                ('candidate_donate_url', models.URLField(blank=True, max_length=255, null=True, verbose_name='Candidate Donate URL')),
                ('candidate_facebook_url', models.URLField(blank=True, max_length=255, null=True, verbose_name='Candidate Facebook URL')),
                ('candidate_twitter_url', models.URLField(blank=True, max_length=255, null=True, verbose_name='Candidate Twitter URL')),
                ('candidate_instagram_url', models.URLField(blank=True, max_length=255, null=True, verbose_name='Candidate Instagram URL')),
                ('candidate_youtube_url', models.URLField(blank=True, max_length=255, null=True, verbose_name='Candidate YouTube URL')),
            ],
        ),
        migrations.CreateModel(
            name='Response',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('response', models.CharField(blank=True, choices=[('a', 'Agree'), ('b', 'Disagree'), ('c', 'Mostly agree'), ('d', 'Mostly disagree')], max_length=1, null=True)),
                ('position', models.TextField(max_length=500, null=True)),
                ('question', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='nominations.Question')),
                ('questionnaire', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='nominations.Questionnaire')),
            ],
        ),
        migrations.AddField(
            model_name='application',
            name='nomination',
            field=models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='nominations.Nomination'),
        ),
        migrations.AddField(
            model_name='application',
            name='questionnaire',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='nominations.Questionnaire'),
        ),
        migrations.RunPython(populate_questions, reverse_code=migrations.RunPython.noop)
    ]
