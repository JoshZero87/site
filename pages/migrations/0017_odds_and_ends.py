# -*- coding: utf-8 -*-
# Generated by Django 1.10.2 on 2016-10-26 00:43
from __future__ import unicode_literals

from django.db import migrations


PAGES = {
        'check-registration': {
            'template': 'check_registration.html',
            'title': "Check Voter Registration",
            'search_description': "Voter registration deadlines are coming up fast - make sure you're registered to vote."
        },

        'dakota-access-filmmaker': {
            'template': 'dakota_access_filmmaker.html',
            'title': "45 years in prison for filming a pipeline protest?",
            'search_description': "Sign our petition for the government to drop all charges against Deia Schlosberg, a filmmaker and journalist who was arrested just for filming a protest."
        },

        'join-lucy-flores-support-women-leaders': {
            'template': 'join_lucy_flores_support_women_leaders.html',
            'title': "Women Leaders",
            'search_description': "Join Lucy Flores in supporting seven outstanding women leaders."
        },

        'prop-61-toolkit': {
            'template': 'prop_61_toolkit.html',
            'title': "Prop 61 Toolkit",
            'search_description': "Together we can stop drug companies from overcharging by billions of dollars each year for life-saving drugs."
        },

        'register-to-vote': {
            'template': 'register_to_vote.html',
            'title': "Register to Vote",
            'search_description': "Register to Vote Today"
        },

        'polling-locator': {
            'template': 'polling_locator.html',
            'title': "Find Your Polling Location",
            'search_description': "Find Your Polling Location"
        }

    }


def populate_pages(apps, schema_editor):
    from pages.models import TemplatePage
    from wagtail.wagtailcore.models import Page, Site
    from wagtail.wagtailredirects.models import Redirect

    

    our_revolution = Page.objects.get(url_path='/')

    for slug, page_data in PAGES.iteritems():

        page = TemplatePage(search_description=page_data['search_description'], slug=slug, title=page_data['title'], template="pages/%s" % page_data['template'])

        our_revolution.add_child(instance=page)

        Redirect.objects.create(**{
            'old_path': "/page/%s" % slug,
            'site': Site.objects.get(is_default_site=True),
            'is_permanent': True,
            'redirect_page': page
        })

    # success page.
    slug = "success"
    page = TemplatePage(search_description="Thanks for Signing Up", slug=slug, title="Thanks for Signing Up", template="pages/success.html")

    our_revolution.add_child(instance=page)


def revert_pages(apps, schema_editor):
    from pages.models import TemplatePage
    from wagtail.wagtailcore.models import Page, Site
    from wagtail.wagtailredirects.models import Redirect

    our_revolution = Page.objects.get(title='Our Revolution')

    for slug, page_data in PAGES.iteritems():

        try:
            Redirect.objects.get(**{
                'old_path': "/page/%s" % slug,
                'site': Site.objects.get(is_default_site=True)
            }).delete()
        except Redirect.DoesNotExist:
            pass

        try:
            page = TemplatePage.objects.get(slug=slug)
            page.delete()
        except TemplatePage.DoesNotExist:
            pass


    page = TemplatePage.objects.get(slug='success')
    page.delete()



class Migration(migrations.Migration):

    dependencies = [
        ('pages', '0016_bylaws_and_privacy_policy'),
    ]

    operations = [
        migrations.RunPython(populate_pages, reverse_code=revert_pages)
    ]
